2017-11-07T22:26:30,942 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f1ec20: startup date [Tue Nov 07 22:26:30 CST 2017]; root of context hierarchy
2017-11-07T22:26:32,512 | INFO  |  | background-preinit |  | org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30) |  |  | HV000001: Hibernate Validator 5.3.5.Final
2017-11-07T22:26:33,119 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T22:26:33,361 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7d6406c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:26:36,216 | INFO  |  | main |  | org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:597) |  |  | The following profiles are active: dev
2017-11-07T22:26:36,267 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae596: startup date [Tue Nov 07 22:26:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f1ec20
2017-11-07T22:26:40,187 | INFO  |  | main |  | org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) |  |  | BeanFactory id=c61a440a-f7bb-33b7-8633-dde047306ca1
2017-11-07T22:26:40,251 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T22:26:40,514 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9376aa04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:26:40,555 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7d6406c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:26:42,957 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) |  |  | Tomcat initialized with port(s): 8761 (http)
2017-11-07T22:26:42,992 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting service [Tomcat]
2017-11-07T22:26:42,995 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting Servlet Engine: Apache Tomcat/8.5.20
2017-11-07T22:26:43,446 | INFO  |  | localhost-startStop-1 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring embedded WebApplicationContext
2017-11-07T22:26:43,447 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) |  |  | Root WebApplicationContext: initialization completed in 7180 ms
2017-11-07T22:26:45,911 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'metricsFilter' to: [/*]
2017-11-07T22:26:45,912 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'characterEncodingFilter' to: [/*]
2017-11-07T22:26:45,913 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-11-07T22:26:45,913 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-11-07T22:26:45,914 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'requestContextFilter' to: [/*]
2017-11-07T22:26:45,914 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'webRequestTraceFilter' to: [/*]
2017-11-07T22:26:45,914 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) |  |  | Mapping filter: 'servletContainer' to urls: [/eureka/*]
2017-11-07T22:26:45,915 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-11-07T22:26:45,915 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) |  |  | Mapping servlet: 'dispatcherServlet' to [/]
2017-11-07T22:26:46,556 | INFO  |  | localhost-startStop-1 |  | com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) |  |  | Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2017-11-07T22:26:46,870 | INFO  |  | localhost-startStop-1 |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) |  |  | Using JSON encoding codec LegacyJacksonJson
2017-11-07T22:26:46,872 | INFO  |  | localhost-startStop-1 |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) |  |  | Using JSON decoding codec LegacyJacksonJson
2017-11-07T22:26:47,353 | INFO  |  | localhost-startStop-1 |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) |  |  | Using XML encoding codec XStreamXml
2017-11-07T22:26:47,354 | INFO  |  | localhost-startStop-1 |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) |  |  | Using XML decoding codec XStreamXml
2017-11-07T22:26:50,656 | WARN  |  | main |  | org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:147) |  |  | No spring.application.name found, defaulting to 'application'
2017-11-07T22:26:50,669 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T22:26:50,670 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T22:26:50,733 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T22:26:50,734 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T22:26:51,742 | INFO  |  | main |  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) |  |  | Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae596: startup date [Tue Nov 07 22:26:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f1ec20
2017-11-07T22:26:52,283 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-11-07T22:26:52,286 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-11-07T22:26:52,308 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017-11-07T22:26:52,310 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2017-11-07T22:26:52,441 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:26:52,442 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:26:52,838 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:26:55,327 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,329 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:26:55,331 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,334 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-11-07T22:26:55,337 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:26:55,340 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-11-07T22:26:55,341 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,342 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,344 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-11-07T22:26:55,345 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-11-07T22:26:55,350 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-11-07T22:26:55,354 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-11-07T22:26:55,366 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-11-07T22:26:55,367 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T22:26:55,368 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,371 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,374 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-11-07T22:26:55,375 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,377 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,378 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,379 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,381 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T22:26:55,382 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-11-07T22:26:55,384 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,388 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2017-11-07T22:26:55,390 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:26:55,392 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:26:56,423 | INFO  |  | main |  | org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) |  |  | SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fae596: startup date [Tue Nov 07 22:26:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f1ec20] and template loader path [classpath:/templates/]
2017-11-07T22:26:56,426 | INFO  |  | main |  | org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) |  |  | ClassTemplateLoader for Spring macros added to FreeMarker configuration
2017-11-07T22:26:56,942 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) |  |  | Setting initial instance status as: STARTING
2017-11-07T22:26:57,135 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:344) |  |  | Initializing Eureka in region us-east-1
2017-11-07T22:26:57,137 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) |  |  | Client configured to neither register nor query for data.
2017-11-07T22:26:57,183 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:361) |  |  | Discovery Client initialized at timestamp 1510064817182 with initial instances count: 0
2017-11-07T22:26:57,445 | INFO  |  | main |  | com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:63) |  |  | Initializing ...
2017-11-07T22:26:57,453 | WARN  |  | main |  | com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:156) |  |  | The replica size seems to be empty. Check the route 53 DNS Registry
2017-11-07T22:26:57,494 | INFO  |  | main |  | com.netflix.eureka.registry.AbstractInstanceRegistry.initRemoteRegionRegistry(AbstractInstanceRegistry.java:152) |  |  | Finished initializing remote region registries. All known remote regions: []
2017-11-07T22:26:57,496 | INFO  |  | main |  | com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:66) |  |  | Initialized
2017-11-07T22:26:58,201 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T22:26:58,226 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-11-07T22:26:58,234 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-11-07T22:26:58,236 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-11-07T22:26:58,238 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2017-11-07T22:26:58,241 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-11-07T22:26:58,244 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-11-07T22:26:58,250 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-11-07T22:26:58,316 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2017-11-07T22:26:58,349 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-11-07T22:26:58,365 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-11-07T22:26:58,429 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1fae596,type=ConfigurationPropertiesRebinder]
2017-11-07T22:26:58,483 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-11-07T22:26:58,488 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T22:26:59,313 | INFO  |  | main |  | org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:343) |  |  | Starting beans in phase 0
2017-11-07T22:26:59,314 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) |  |  | Registering application unknown with eureka with status UP
2017-11-07T22:26:59,321 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-11-07T22:26:59,339 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-11-07T22:26:59,360 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-11-07T22:26:59,368 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-11-07T22:26:59,378 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-11-07T22:26:59,387 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-11-07T22:26:59,396 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-11-07T22:26:59,408 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-11-07T22:26:59,419 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-11-07T22:26:59,437 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-11-07T22:26:59,446 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-11-07T22:26:59,452 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-11-07T22:26:59,461 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-11-07T22:26:59,470 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-11-07T22:26:59,478 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:107) |  |  | Setting the eureka configuration..
2017-11-07T22:26:59,478 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:112) |  |  | Eureka data center value eureka.datacenter is not set, defaulting to default
2017-11-07T22:26:59,479 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:126) |  |  | Eureka environment value eureka.environment is not set, defaulting to test
2017-11-07T22:26:59,508 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:182) |  |  | isAws returned false
2017-11-07T22:26:59,509 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:150) |  |  | Initialized server context
2017-11-07T22:26:59,510 | INFO  |  | Thread-11 |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:242) |  |  | Got 1 instances from neighboring DS node
2017-11-07T22:26:59,511 | INFO  |  | Thread-11 |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:243) |  |  | Renew threshold is: 1
2017-11-07T22:26:59,511 | INFO  |  | Thread-11 |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:254) |  |  | Changing status to UP
2017-11-07T22:26:59,541 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing ProtocolHandler ["http-nio-8761"]
2017-11-07T22:26:59,591 | INFO  |  | Thread-11 |  | org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration$1.run(EurekaServerInitializerConfiguration.java:71) |  |  | Started Eureka Server
2017-11-07T22:26:59,839 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting ProtocolHandler ["http-nio-8761"]
2017-11-07T22:26:59,879 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Using a shared selector for servlet write/read
2017-11-07T22:26:59,973 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) |  |  | Tomcat started on port(s): 8761 (http)
2017-11-07T22:26:59,976 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) |  |  | Updating port to 8761
2017-11-07T22:26:59,992 | INFO  |  | main |  | org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57) |  |  | Started EurekaServerApplication in 31.873 seconds (JVM running for 38.704)
2017-11-07T22:27:35,253 | INFO  |  | http-nio-8761-exec-1 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-11-07T22:27:35,254 | INFO  |  | http-nio-8761-exec-1 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) |  |  | FrameworkServlet 'dispatcherServlet': initialization started
2017-11-07T22:27:35,310 | INFO  |  | http-nio-8761-exec-1 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) |  |  | FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
2017-11-07T22:27:59,514 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:28:59,515 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:29:59,534 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 19ms
2017-11-07T22:30:59,535 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:31:59,548 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 13ms
2017-11-07T22:32:59,549 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:33:59,549 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:34:59,550 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:35:59,550 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:36:57,465 | WARN  |  | Eureka-PeerNodesUpdater |  | com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:156) |  |  | The replica size seems to be empty. Check the route 53 DNS Registry
2017-11-07T22:36:59,558 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 8ms
2017-11-07T22:37:59,559 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:38:59,559 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:39:59,560 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:40:59,560 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:41:57,494 | INFO  |  | ReplicaAwareInstanceRegistry - RenewalThresholdUpdater |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.updateRenewalThreshold(PeerAwareInstanceRegistryImpl.java:541) |  |  | Current renewal threshold is : 0
2017-11-07T22:41:59,564 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 2ms
2017-11-07T22:42:59,563 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:43:17,220 | INFO  |  | http-nio-8761-exec-3 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance CONFIG-CENTER/MVJZ5FFHZST5XOW:config-center:8888 with status UP (replication=false)
2017-11-07T22:43:59,563 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:44:59,564 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:45:59,565 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:46:57,477 | WARN  |  | Eureka-PeerNodesUpdater |  | com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:156) |  |  | The replica size seems to be empty. Check the route 53 DNS Registry
2017-11-07T22:46:59,566 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:47:59,566 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:48:59,567 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:49:40,901 | INFO  |  | http-nio-8761-exec-9 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin with status UP (replication=false)
2017-11-07T22:49:59,567 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:50:59,572 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 1ms
2017-11-07T22:51:59,570 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:52:59,570 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:53:59,571 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:54:59,571 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:55:59,572 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:56:57,488 | WARN  |  | Eureka-PeerNodesUpdater |  | com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:156) |  |  | The replica size seems to be empty. Check the route 53 DNS Registry
2017-11-07T22:56:57,496 | INFO  |  | ReplicaAwareInstanceRegistry - RenewalThresholdUpdater |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.updateRenewalThreshold(PeerAwareInstanceRegistryImpl.java:541) |  |  | Current renewal threshold is : 0
2017-11-07T22:56:59,605 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 32ms
2017-11-07T22:57:21,929 | INFO  |  | http-nio-8761-exec-7 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance CONFIG-CENTER/MVJZ5FFHZST5XOW:config-center:8888 with status UP (replication=false)
2017-11-07T22:57:59,606 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:58:07,239 | INFO  |  | http-nio-8761-exec-1 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin with status UP (replication=false)
2017-11-07T22:58:59,607 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T22:59:59,609 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 2ms
2017-11-07T23:00:59,610 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:01:59,610 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:02:59,611 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:03:59,611 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:04:59,611 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:05:26,828 | INFO  |  | http-nio-8761-exec-7 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin with status UP (replication=false)
2017-11-07T23:05:59,613 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:06:57,500 | WARN  |  | Eureka-PeerNodesUpdater |  | com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:156) |  |  | The replica size seems to be empty. Check the route 53 DNS Registry
2017-11-07T23:06:59,613 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:07:59,614 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:08:04,699 | INFO  |  | http-nio-8761-exec-7 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin with status UP (replication=false)
2017-11-07T23:08:59,677 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 62ms
2017-11-07T23:09:42,057 | INFO  |  | http-nio-8761-exec-2 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin:8091 with status UP (replication=false)
2017-11-07T23:09:59,678 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:10:59,688 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 8ms
2017-11-07T23:11:57,496 | INFO  |  | ReplicaAwareInstanceRegistry - RenewalThresholdUpdater |  | com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.updateRenewalThreshold(PeerAwareInstanceRegistryImpl.java:541) |  |  | Current renewal threshold is : 0
2017-11-07T23:11:59,686 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
2017-11-07T23:12:14,115 | INFO  |  | http-nio-8761-exec-10 |  | com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:267) |  |  | Registered instance WEIXIN/MVJZ5FFHZST5XOW:weixin:8091 with status UP (replication=false)
2017-11-07T23:12:59,691 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 3ms
2017-11-07T23:12:59,691 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry.evict(AbstractInstanceRegistry.java:616) |  |  | Evicting 1 items (expired=1, evictionLimit=1)
2017-11-07T23:12:59,692 | WARN  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry.evict(AbstractInstanceRegistry.java:628) |  |  | DS: Registry: expired lease for WEIXIN/MVJZ5FFHZST5XOW:weixin
2017-11-07T23:12:59,705 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry.internalCancel(AbstractInstanceRegistry.java:331) |  |  | Cancelled instance WEIXIN/MVJZ5FFHZST5XOW:weixin (replication=false)
2017-11-07T23:13:59,690 | INFO  |  | Eureka-EvictionTimer |  | com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1254) |  |  | Running the evict task with compensationTime 0ms
