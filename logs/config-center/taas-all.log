2017-11-07T22:57:01,700 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7471ce: startup date [Tue Nov 07 22:57:01 CST 2017]; root of context hierarchy
2017-11-07T22:57:02,209 | INFO  |  | background-preinit |  | org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30) |  |  | HV000001: Hibernate Validator 5.3.5.Final
2017-11-07T22:57:02,824 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T22:57:02,951 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c49e8751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:57:04,701 | INFO  |  | main |  | org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:597) |  |  | The following profiles are active: git
2017-11-07T22:57:04,745 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@566842: startup date [Tue Nov 07 22:57:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7471ce
2017-11-07T22:57:07,891 | INFO  |  | main |  | org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) |  |  | BeanFactory id=59e4e025-e419-3ea1-85bc-49280f4c4db2
2017-11-07T22:57:07,955 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T22:57:08,156 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$dab12a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:57:08,194 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c49e8751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T22:57:09,628 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) |  |  | Tomcat initialized with port(s): 8888 (http)
2017-11-07T22:57:09,652 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting service [Tomcat]
2017-11-07T22:57:09,656 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting Servlet Engine: Apache Tomcat/8.5.20
2017-11-07T22:57:10,101 | INFO  |  | localhost-startStop-1 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring embedded WebApplicationContext
2017-11-07T22:57:10,101 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) |  |  | Root WebApplicationContext: initialization completed in 5356 ms
2017-11-07T22:57:10,879 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) |  |  | Mapping servlet: 'dispatcherServlet' to [/]
2017-11-07T22:57:10,910 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'metricsFilter' to: [/*]
2017-11-07T22:57:10,911 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'characterEncodingFilter' to: [/*]
2017-11-07T22:57:10,911 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-11-07T22:57:10,911 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-11-07T22:57:10,912 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'requestContextFilter' to: [/*]
2017-11-07T22:57:10,912 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-11-07T22:57:10,912 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-11-07T22:57:12,633 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T22:57:12,637 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T22:57:12,652 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T22:57:12,653 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T22:57:13,599 | INFO  |  | main |  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) |  |  | Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@566842: startup date [Tue Nov 07 22:57:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7471ce
2017-11-07T22:57:13,966 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-11-07T22:57:13,969 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-11-07T22:57:13,999 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/encrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,org.springframework.http.MediaType)
2017-11-07T22:57:14,000 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/encrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.encrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
2017-11-07T22:57:14,000 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/decrypt/{name}/{profiles}],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.MediaType)
2017-11-07T22:57:14,001 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/decrypt],methods=[POST]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.decrypt(java.lang.String,org.springframework.http.MediaType)
2017-11-07T22:57:14,002 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/encrypt/status],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.config.server.encryption.EncryptionController.status()
2017-11-07T22:57:14,003 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/key],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey()
2017-11-07T22:57:14,003 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/key/{name}/{profiles}],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.encryption.EncryptionController.getPublicKey(java.lang.String,java.lang.String)
2017-11-07T22:57:14,023 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.properties(java.lang.String,java.lang.String,boolean) throws java.io.IOException
2017-11-07T22:57:14,024 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.jsonProperties(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
2017-11-07T22:57:14,026 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{label}/{name}-{profiles}.yml || /{label}/{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledYaml(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
2017-11-07T22:57:14,027 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{label}/{name}-{profiles}.properties],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.io.IOException
2017-11-07T22:57:14,028 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{label}/{name}-{profiles}.json],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.labelledJsonProperties(java.lang.String,java.lang.String,java.lang.String,boolean) throws java.lang.Exception
2017-11-07T22:57:14,029 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}-{profiles}.yml || /{name}-{profiles}.yaml],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.lang.String> org.springframework.cloud.config.server.environment.EnvironmentController.yaml(java.lang.String,java.lang.String,boolean) throws java.lang.Exception
2017-11-07T22:57:14,030 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}/{profiles}/{label:.*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.labelled(java.lang.String,java.lang.String,java.lang.String)
2017-11-07T22:57:14,031 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}/{profiles:.*[^-].*}],methods=[GET]}" onto public org.springframework.cloud.config.environment.Environment org.springframework.cloud.config.server.environment.EnvironmentController.defaultLabel(java.lang.String,java.lang.String)
2017-11-07T22:57:14,038 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}/{profile}/{label}/**],methods=[GET],produces=[application/octet-stream]}" onto public synchronized byte[] org.springframework.cloud.config.server.resource.ResourceController.binary(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2017-11-07T22:57:14,039 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/{name}/{profile}/{label}/**],methods=[GET]}" onto public java.lang.String org.springframework.cloud.config.server.resource.ResourceController.retrieve(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,boolean) throws java.io.IOException
2017-11-07T22:57:14,154 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:57:14,154 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:57:14,388 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T22:57:16,737 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-11-07T22:57:16,738 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,744 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-11-07T22:57:16,745 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T22:57:16,752 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,754 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,755 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,757 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2017-11-07T22:57:16,759 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-11-07T22:57:16,760 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,761 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:57:16,763 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-11-07T22:57:16,764 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T22:57:16,765 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-11-07T22:57:16,770 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-11-07T22:57:16,774 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,775 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:57:16,777 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,778 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,779 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T22:57:16,780 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-11-07T22:57:16,781 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-11-07T22:57:16,782 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,786 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-11-07T22:57:16,792 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,794 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:16,795 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T22:57:17,987 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T22:57:18,027 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-11-07T22:57:18,038 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-11-07T22:57:18,040 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-11-07T22:57:18,042 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2017-11-07T22:57:18,046 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-11-07T22:57:18,050 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-11-07T22:57:18,057 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-11-07T22:57:18,090 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2017-11-07T22:57:18,140 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-11-07T22:57:18,155 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-11-07T22:57:18,183 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=566842,type=ConfigurationPropertiesRebinder]
2017-11-07T22:57:18,200 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-11-07T22:57:18,205 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T22:57:18,993 | INFO  |  | main |  | org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:343) |  |  | Starting beans in phase 0
2017-11-07T22:57:19,023 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) |  |  | Setting initial instance status as: STARTING
2017-11-07T22:57:19,123 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:344) |  |  | Initializing Eureka in region us-east-1
2017-11-07T22:57:19,946 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) |  |  | Using JSON encoding codec LegacyJacksonJson
2017-11-07T22:57:19,947 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) |  |  | Using JSON decoding codec LegacyJacksonJson
2017-11-07T22:57:20,225 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) |  |  | Using XML encoding codec XStreamXml
2017-11-07T22:57:20,226 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) |  |  | Using XML decoding codec XStreamXml
2017-11-07T22:57:20,873 | INFO  |  | main |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
2017-11-07T22:57:21,205 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:920) |  |  | Disable delta property : false
2017-11-07T22:57:21,206 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:921) |  |  | Single vip registry refresh property : null
2017-11-07T22:57:21,206 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:922) |  |  | Force full registry fetch : false
2017-11-07T22:57:21,207 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:923) |  |  | Application is null : false
2017-11-07T22:57:21,207 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:924) |  |  | Registered Applications size is zero : true
2017-11-07T22:57:21,208 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:926) |  |  | Application version is -1: true
2017-11-07T22:57:21,208 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1009) |  |  | Getting all instance registry info from the eureka server
2017-11-07T22:57:21,700 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) |  |  | The response status is 200
2017-11-07T22:57:21,707 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1244) |  |  | Starting heartbeat executor: renew interval is: 30
2017-11-07T22:57:21,716 | INFO  |  | main |  | com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) |  |  | InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-11-07T22:57:21,752 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:425) |  |  | Discovery Client initialized at timestamp 1510066641739 with initial instances count: 2
2017-11-07T22:57:21,819 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) |  |  | Registering application config-center with eureka with status UP
2017-11-07T22:57:21,820 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1279) |  |  | Saw local status change event StatusChangeEvent [timestamp=1510066641820, current=UP, previous=STARTING]
2017-11-07T22:57:21,825 | INFO  |  | DiscoveryClient-InstanceInfoReplicator-0 |  | com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:795) |  |  | DiscoveryClient_CONFIG-CENTER/MVJZ5FFHZST5XOW:config-center:8888: registering service...
2017-11-07T22:57:21,841 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-11-07T22:57:21,863 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-11-07T22:57:21,892 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-11-07T22:57:21,900 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-11-07T22:57:21,910 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-11-07T22:57:21,923 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-11-07T22:57:21,932 | INFO  |  | DiscoveryClient-InstanceInfoReplicator-0 |  | com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) |  |  | DiscoveryClient_CONFIG-CENTER/MVJZ5FFHZST5XOW:config-center:8888 - registration status: 204
2017-11-07T22:57:21,938 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-11-07T22:57:21,949 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-11-07T22:57:21,960 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-11-07T22:57:21,977 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-11-07T22:57:21,985 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-11-07T22:57:21,994 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-11-07T22:57:22,003 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-11-07T22:57:22,017 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-11-07T22:57:22,068 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing ProtocolHandler ["http-nio-8888"]
2017-11-07T22:57:22,097 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting ProtocolHandler ["http-nio-8888"]
2017-11-07T22:57:22,134 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Using a shared selector for servlet write/read
2017-11-07T22:57:22,235 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) |  |  | Tomcat started on port(s): 8888 (http)
2017-11-07T22:57:22,237 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) |  |  | Updating port to 8888
2017-11-07T22:57:22,248 | INFO  |  | main |  | org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57) |  |  | Started ConfigCenterApplication in 23.277 seconds (JVM running for 26.341)
2017-11-07T22:57:40,765 | INFO  |  | http-nio-8888-exec-2 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-11-07T22:57:40,766 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) |  |  | FrameworkServlet 'dispatcherServlet': initialization started
2017-11-07T22:57:40,836 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) |  |  | FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2017-11-07T22:57:51,846 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@156b751: startup date [Tue Nov 07 22:57:51 CST 2017]; root of context hierarchy
2017-11-07T22:57:51,919 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T22:57:52,115 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin-dev.yml
2017-11-07T22:57:52,116 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin.yml
2017-11-07T22:57:52,118 | INFO  |  | http-nio-8888-exec-2 |  | org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:984) |  |  | Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@156b751: startup date [Tue Nov 07 22:57:51 CST 2017]; root of context hierarchy
2017-11-07T23:02:21,223 | INFO  |  | AsyncResolver-bootstrap-executor-0 |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
2017-11-07T23:05:13,427 | INFO  |  | http-nio-8888-exec-1 |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d09de7: startup date [Tue Nov 07 23:05:13 CST 2017]; root of context hierarchy
2017-11-07T23:05:13,446 | INFO  |  | http-nio-8888-exec-1 |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:05:13,501 | INFO  |  | http-nio-8888-exec-1 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin-dev.yml
2017-11-07T23:05:13,502 | INFO  |  | http-nio-8888-exec-1 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin.yml
2017-11-07T23:05:13,503 | INFO  |  | http-nio-8888-exec-1 |  | org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:984) |  |  | Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d09de7: startup date [Tue Nov 07 23:05:13 CST 2017]; root of context hierarchy
2017-11-07T23:07:21,232 | INFO  |  | AsyncResolver-bootstrap-executor-0 |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
2017-11-07T23:07:49,825 | INFO  |  | http-nio-8888-exec-5 |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d622a6: startup date [Tue Nov 07 23:07:49 CST 2017]; root of context hierarchy
2017-11-07T23:07:49,839 | INFO  |  | http-nio-8888-exec-5 |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:07:49,886 | INFO  |  | http-nio-8888-exec-5 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin-dev.yml
2017-11-07T23:07:49,887 | INFO  |  | http-nio-8888-exec-5 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin.yml
2017-11-07T23:07:49,888 | INFO  |  | http-nio-8888-exec-5 |  | org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:984) |  |  | Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d622a6: startup date [Tue Nov 07 23:07:49 CST 2017]; root of context hierarchy
2017-11-07T23:09:27,315 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.cloud.config.server.environment.JGitEnvironmentRepository.fetch(JGitEnvironmentRepository.java:299) |  |  | Fetched for remote master and found 1 updates
2017-11-07T23:09:28,274 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@772801: startup date [Tue Nov 07 23:09:28 CST 2017]; root of context hierarchy
2017-11-07T23:09:28,291 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:09:28,341 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin-dev.yml
2017-11-07T23:09:28,342 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin.yml
2017-11-07T23:09:28,343 | INFO  |  | http-nio-8888-exec-6 |  | org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:984) |  |  | Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@772801: startup date [Tue Nov 07 23:09:28 CST 2017]; root of context hierarchy
2017-11-07T23:12:00,347 | INFO  |  | http-nio-8888-exec-8 |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17f1e7f: startup date [Tue Nov 07 23:12:00 CST 2017]; root of context hierarchy
2017-11-07T23:12:00,363 | INFO  |  | http-nio-8888-exec-8 |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:12:00,415 | INFO  |  | http-nio-8888-exec-8 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin-dev.yml
2017-11-07T23:12:00,416 | INFO  |  | http-nio-8888-exec-8 |  | org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.clean(NativeEnvironmentRepository.java:248) |  |  | Adding property source: file:/C:/Users/ADMINI~1/AppData/Local/Temp/config-repo-8362229258103318595/config/weixin.yml
2017-11-07T23:12:00,417 | INFO  |  | http-nio-8888-exec-8 |  | org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:984) |  |  | Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@17f1e7f: startup date [Tue Nov 07 23:12:00 CST 2017]; root of context hierarchy
2017-11-07T23:12:21,239 | INFO  |  | AsyncResolver-bootstrap-executor-0 |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
