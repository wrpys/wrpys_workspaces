2017-11-07T23:11:45,092 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@191f767: startup date [Tue Nov 07 23:11:45 CST 2017]; root of context hierarchy
2017-11-07T23:11:45,583 | INFO  |  | background-preinit |  | org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30) |  |  | HV000001: Hibernate Validator 5.3.5.Final
2017-11-07T23:11:46,513 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:11:46,654 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$538b2c74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T23:11:48,300 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) |  |  | Setting initial instance status as: STARTING
2017-11-07T23:11:48,626 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:344) |  |  | Initializing Eureka in region us-east-1
2017-11-07T23:11:50,331 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) |  |  | Using JSON encoding codec LegacyJacksonJson
2017-11-07T23:11:50,332 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) |  |  | Using JSON decoding codec LegacyJacksonJson
2017-11-07T23:11:50,625 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) |  |  | Using XML encoding codec XStreamXml
2017-11-07T23:11:50,626 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) |  |  | Using XML decoding codec XStreamXml
2017-11-07T23:11:51,387 | INFO  |  | main |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
2017-11-07T23:11:51,708 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:920) |  |  | Disable delta property : false
2017-11-07T23:11:51,709 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:921) |  |  | Single vip registry refresh property : null
2017-11-07T23:11:51,710 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:922) |  |  | Force full registry fetch : false
2017-11-07T23:11:51,711 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:923) |  |  | Application is null : false
2017-11-07T23:11:51,711 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:924) |  |  | Registered Applications size is zero : true
2017-11-07T23:11:51,712 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:926) |  |  | Application version is -1: true
2017-11-07T23:11:51,712 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1009) |  |  | Getting all instance registry info from the eureka server
2017-11-07T23:11:52,325 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) |  |  | The response status is 200
2017-11-07T23:11:52,336 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1291) |  |  | Not registering with Eureka server per configuration
2017-11-07T23:11:52,345 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:425) |  |  | Discovery Client initialized at timestamp 1510067512344 with initial instances count: 3
2017-11-07T23:11:53,847 | INFO  |  | main |  | org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.locate(ConfigServicePropertySourceLocator.java:82) |  |  | Fetching config from server at: http://192.168.0.103:8888/
2017-11-07T23:12:00,457 | INFO  |  | main |  | org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.locate(ConfigServicePropertySourceLocator.java:96) |  |  | Located environment: name=weixin, profiles=[dev], label=null, version=067361125a9c073bd700643aba684769f1853caf, state=null
2017-11-07T23:12:00,458 | INFO  |  | main |  | org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:97) |  |  | Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/wrpys/wrpys_workspaces/config/weixin-dev.yml'}, MapPropertySource {name='https://github.com/wrpys/wrpys_workspaces/config/weixin.yml'}]]
2017-11-07T23:12:00,471 | INFO  |  | main |  | org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:597) |  |  | The following profiles are active: dev
2017-11-07T23:12:00,512 | INFO  |  | main |  | org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) |  |  | Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7988f4: startup date [Tue Nov 07 23:12:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@191f767
2017-11-07T23:12:03,370 | INFO  |  | main |  | org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) |  |  | BeanFactory id=30762580-8fc6-3cda-8baf-c07bc2138363
2017-11-07T23:12:03,413 | INFO  |  | main |  | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) |  |  | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-11-07T23:12:03,776 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$699dcfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T23:12:03,805 | INFO  |  | main |  | org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325) |  |  | Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$538b2c74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-11-07T23:12:04,711 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) |  |  | Tomcat initialized with port(s): 8091 (http)
2017-11-07T23:12:04,752 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting service [Tomcat]
2017-11-07T23:12:04,756 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting Servlet Engine: Apache Tomcat/8.5.20
2017-11-07T23:12:05,131 | INFO  |  | localhost-startStop-1 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring embedded WebApplicationContext
2017-11-07T23:12:05,132 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) |  |  | Root WebApplicationContext: initialization completed in 4620 ms
2017-11-07T23:12:06,110 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) |  |  | Mapping servlet: 'dispatcherServlet' to [/]
2017-11-07T23:12:06,151 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'metricsFilter' to: [/*]
2017-11-07T23:12:06,153 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'characterEncodingFilter' to: [/*]
2017-11-07T23:12:06,153 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-11-07T23:12:06,154 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-11-07T23:12:06,154 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'requestContextFilter' to: [/*]
2017-11-07T23:12:06,155 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-11-07T23:12:06,155 | INFO  |  | localhost-startStop-1 |  | org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) |  |  | Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-11-07T23:12:07,598 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T23:12:07,599 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T23:12:07,615 | WARN  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) |  |  | No URLs will be polled as dynamic configuration sources.
2017-11-07T23:12:07,616 | INFO  |  | main |  | com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) |  |  | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-11-07T23:12:08,694 | INFO  |  | main |  | org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) |  |  | Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7988f4: startup date [Tue Nov 07 23:12:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@191f767
2017-11-07T23:12:09,050 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/test/getData],methods=[GET]}" onto public java.lang.String com.wrpys.app.wx.controller.TestController.getData()
2017-11-07T23:12:09,061 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-11-07T23:12:09,063 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-11-07T23:12:09,180 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T23:12:09,180 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T23:12:09,404 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) |  |  | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-11-07T23:12:11,305 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,306 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T23:12:11,307 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-11-07T23:12:11,313 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-11-07T23:12:11,314 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-11-07T23:12:11,316 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,320 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,321 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T23:12:11,324 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2017-11-07T23:12:11,328 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-11-07T23:12:11,329 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,331 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,333 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-11-07T23:12:11,336 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-11-07T23:12:11,337 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T23:12:11,339 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-11-07T23:12:11,340 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-11-07T23:12:11,346 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-11-07T23:12:11,348 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-11-07T23:12:11,351 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-11-07T23:12:11,352 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,353 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,355 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,356 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,357 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,360 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,361 | INFO  |  | main |  | org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) |  |  | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-11-07T23:12:11,920 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:852) |  |  | Shutting down DiscoveryClient ...
2017-11-07T23:12:11,956 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:873) |  |  | Completed shut down of DiscoveryClient
2017-11-07T23:12:12,451 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T23:12:12,506 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-11-07T23:12:12,516 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-11-07T23:12:12,518 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-11-07T23:12:12,519 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2017-11-07T23:12:12,523 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-11-07T23:12:12,526 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916) |  |  | Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-11-07T23:12:12,531 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-11-07T23:12:12,567 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2017-11-07T23:12:12,593 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-11-07T23:12:12,613 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-11-07T23:12:12,650 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7988f4,type=ConfigurationPropertiesRebinder]
2017-11-07T23:12:12,666 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-11-07T23:12:12,671 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) |  |  | Registering beans for JMX exposure on startup
2017-11-07T23:12:13,421 | INFO  |  | main |  | org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:343) |  |  | Starting beans in phase 0
2017-11-07T23:12:13,433 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) |  |  | Setting initial instance status as: STARTING
2017-11-07T23:12:13,458 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:344) |  |  | Initializing Eureka in region us-east-1
2017-11-07T23:12:13,468 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) |  |  | Using JSON encoding codec LegacyJacksonJson
2017-11-07T23:12:13,469 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) |  |  | Using JSON decoding codec LegacyJacksonJson
2017-11-07T23:12:13,470 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) |  |  | Using XML encoding codec XStreamXml
2017-11-07T23:12:13,470 | INFO  |  | main |  | com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) |  |  | Using XML decoding codec XStreamXml
2017-11-07T23:12:13,863 | INFO  |  | main |  | com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) |  |  | Resolving eureka endpoints via configuration
2017-11-07T23:12:13,868 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:920) |  |  | Disable delta property : false
2017-11-07T23:12:13,868 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:921) |  |  | Single vip registry refresh property : null
2017-11-07T23:12:13,869 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:922) |  |  | Force full registry fetch : false
2017-11-07T23:12:13,869 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:923) |  |  | Application is null : false
2017-11-07T23:12:13,870 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:924) |  |  | Registered Applications size is zero : true
2017-11-07T23:12:13,871 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:926) |  |  | Application version is -1: true
2017-11-07T23:12:13,871 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1009) |  |  | Getting all instance registry info from the eureka server
2017-11-07T23:12:13,883 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1018) |  |  | The response status is 200
2017-11-07T23:12:13,887 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1244) |  |  | Starting heartbeat executor: renew interval is: 30
2017-11-07T23:12:13,894 | INFO  |  | main |  | com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) |  |  | InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-11-07T23:12:13,903 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:425) |  |  | Discovery Client initialized at timestamp 1510067533902 with initial instances count: 3
2017-11-07T23:12:13,990 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) |  |  | Registering application weixin with eureka with status UP
2017-11-07T23:12:13,991 | INFO  |  | main |  | com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1279) |  |  | Saw local status change event StatusChangeEvent [timestamp=1510067533991, current=UP, previous=STARTING]
2017-11-07T23:12:13,996 | INFO  |  | DiscoveryClient-InstanceInfoReplicator-0 |  | com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:795) |  |  | DiscoveryClient_WEIXIN/MVJZ5FFHZST5XOW:weixin:8091: registering service...
2017-11-07T23:12:14,035 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-11-07T23:12:14,057 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-11-07T23:12:14,080 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-11-07T23:12:14,126 | INFO  |  | DiscoveryClient-InstanceInfoReplicator-0 |  | com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) |  |  | DiscoveryClient_WEIXIN/MVJZ5FFHZST5XOW:weixin:8091 - registration status: 204
2017-11-07T23:12:14,133 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-11-07T23:12:14,140 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-11-07T23:12:14,147 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-11-07T23:12:14,155 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-11-07T23:12:14,164 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-11-07T23:12:14,175 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-11-07T23:12:14,196 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-11-07T23:12:14,207 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-11-07T23:12:14,217 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-11-07T23:12:14,225 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-11-07T23:12:14,233 | INFO  |  | main |  | org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678) |  |  | Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-11-07T23:12:14,293 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing ProtocolHandler ["http-nio-8091"]
2017-11-07T23:12:14,327 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Starting ProtocolHandler ["http-nio-8091"]
2017-11-07T23:12:14,367 | INFO  |  | main |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Using a shared selector for servlet write/read
2017-11-07T23:12:14,418 | INFO  |  | main |  | org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) |  |  | Tomcat started on port(s): 8091 (http)
2017-11-07T23:12:14,420 | INFO  |  | main |  | org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) |  |  | Updating port to 8091
2017-11-07T23:12:14,431 | INFO  |  | main |  | org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57) |  |  | Started WeixinApplication in 32.001 seconds (JVM running for 35.323)
2017-11-07T23:12:53,314 | INFO  |  | http-nio-8091-exec-1 |  | org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:179) |  |  | Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-11-07T23:12:53,315 | INFO  |  | http-nio-8091-exec-1 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) |  |  | FrameworkServlet 'dispatcherServlet': initialization started
2017-11-07T23:12:53,392 | INFO  |  | http-nio-8091-exec-1 |  | org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) |  |  | FrameworkServlet 'dispatcherServlet': initialization completed in 76 ms
